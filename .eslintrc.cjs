/* eslint-env node */
// eslint-disable-next-line import/no-extraneous-dependencies
require('@rushstack/eslint-patch/modern-module-resolution');

module.exports = {
    root: true,
    ignorePatterns: [
        'node_modules/',
        'dist/',
        'build/',
        'assets/',
        '.eslintrc.cjs',
        'tailwind.config.js',
        'vite.config.ts',
        'postcss.config.js',
    ],
    extends: [
        'airbnb-base',
        'airbnb-typescript/base',
        'plugin:vue/vue3-essential',
        'eslint:recommended',
        '@vue/eslint-config-prettier/skip-formatting',
        'plugin:@typescript-eslint/recommended',
    ],
    plugins: ['vue', 'import-newlines', '@typescript-eslint'],
    parser: 'vue-eslint-parser',
    overrides: [
        {
            files: ['tailwind.config.js', 'vite.config.js', '*.config.js'],
            rules: {
                '@typescript-eslint/no-var-requires': 'off',
                'import/no-extraneous-dependencies': 'off',
            },
        },
    ],
    parserOptions: {
        ecmaVersion: 'latest',
        parser: '@typescript-eslint/parser',
        sourceType: 'module',
        extraFileExtensions: ['.vue'],
        project: ['./tsconfig.app.json', './tsconfig.node.json', './tsconfig.vitest.json', './tsconfig.config.json'],
    },
    rules: {
        "import/prefer-default-export": "off",
        "import/no-extraneous-dependencies": ["error", {"devDependencies": true}],
        'no-new': 'off',
        'no-bitwise': 'off',
        'no-plusplus': 'off',
        'vue/valid-v-for': 'off',
        'no-param-reassign': 'off',
        'consistent-return': 'off',
        'no-underscore-dangle': 'off',
        'function-paren-newline': 'off',
        'radix': ['error', 'as-needed'],
        'no-restricted-globals': ['off'],
        'class-methods-use-this': 'off',
        'no-shadow': 'off',
        '@typescript-eslint/no-shadow': 'warn',
        'arrow-parens': ['error', 'as-needed'],
        'space-before-function-paren': ['error', 'always'],
        'no-unused-vars': ['error', { args: 'after-used' }],
        'comma-dangle': ['error', {
            arrays: 'always-multiline',
            objects: 'always-multiline',
            imports: 'always-multiline',
            exports: 'always-multiline',
            functions: 'never',
        }],
        'no-console': ['error', { allow: ['warn', 'error'] }],
        'import/extensions': ['error', 'ignorePackages',
            {
                js: "never",
                jsx: "never",
                ts: "never",
                tsx: "never",
                vue: 'always',
            }],
        'import/no-unresolved': 'off',
        'vue/html-indent': ['error', 4],
        'quote-props': ['error', 'consistent-as-needed'],
        'func-names': ['error', 'never'],
        'no-restricted-syntax': ['error', 'WithStatement', 'BinaryExpression[operator=in]'],
        'vue/require-prop-type-constructor': 'off',
        'vue/require-prop-types': ['error'],
        'vue/html-closing-bracket-newline': ['error', {
            singleline: 'never',
            multiline: 'always',
        }],
        'vue/v-bind-style': ['error', 'shorthand'],
        'vue/v-on-style': ['error', 'shorthand'],
        'vue/singleline-html-element-content-newline': 'off',
        'vue/multiline-html-element-content-newline': 'off',
        'vue/html-closing-bracket-spacing': 'off',
        'vue/no-template-shadow': 'off',
        'vue/return-in-computed-property': 'off',
        'vue/no-v-html': 'off',
        'vue/no-lone-template': 'off',
        'vue/no-reserved-component-names': 'off',
        'vue/attribute-hyphenation': ['error', 'always'],
        'vue/html-quotes': ['error', 'double', { avoidEscape: true }],
        'vue/one-component-per-file': 'off',
        'vue/order-in-components': 'off',
        'vue/component-definition-name-casing': ['error', 'PascalCase'],
        'vue/no-multi-spaces': ['error', {
            ignoreProperties: true,
        }],
        'vue/prop-name-casing': ['error', 'camelCase'],
        'vue/require-valid-default-prop': 'off',
        'vue/this-in-template': ['error', 'never'],
        'vue/multi-word-component-names': 'off',
        'vue/no-mutating-props': 'off',
        'vue/no-computed-properties-in-data': 'off',
        'vue/no-dupe-v-else-if': 'off',
        'vue/no-unused-components': 'off',
        'vue/valid-next-tick': 'off',
        'vue/no-child-content': 'off',
        'implicit-arrow-linebreak': 'off',
        'operator-linebreak': ['error', 'after', {
            overrides: {
                '?': 'before',
                ':': 'before',
                '&&': 'before',
                '||': 'before',
            },
        }],
        'prefer-object-spread': 'off',
        'no-async-promise-executor': 'off',
        'function-call-argument-newline': ['error', 'consistent'],
        'default-param-last': 'off',
        'prefer-regex-literals': 'off',
        'prefer-exponentiation-operator': 'off',
        'space-before-blocks': 'off',
        'keyword-spacing': 'off',
        'camelcase': 'off',
        'semi': ['error'],
        'no-dupe-else-if': 'off',
        'no-promise-executor-return': 'off',
        'grouped-accessor-pairs': 'off',
        'vue/html-self-closing': [
            'error', {
                html: {
                    void: 'never',
                    normal: 'never',
                    component: 'always',
                },
                svg: 'always',
                math: 'always',
            },
        ],
        'prefer-destructuring': [
            'error', {
                VariableDeclarator: {
                    array: false,
                    object: true,
                },
                AssignmentExpression: {
                    array: true,
                    object: false,
                },
            },
        ],
        'object-curly-newline': 'off',
        'vue/max-attributes-per-line': ['error', {
            multiline: {
                max: 1,
            },
            singleline: 1,
        }],
        'vue/first-attribute-linebreak': ['error', {
            singleline: 'beside',
            multiline: 'below',
        }],
        'vue/attributes-order': ['error', {
            order: [
                'DEFINITION',
                'LIST_RENDERING',
                'CONDITIONALS',
                'RENDER_MODIFIERS',
                'GLOBAL',
                'UNIQUE',
                'ATTR_SHORTHAND_BOOL',
                'ATTR_STATIC',
                'ATTR_DYNAMIC',
                'TWO_WAY_BINDING',
                'OTHER_DIRECTIVES',
                'EVENTS',
                'CONTENT',
            ],
            alphabetical: true,
        }],
        'multiline-ternary': ['error', 'always-multiline'],
        'array-bracket-newline': ['error', 'consistent'],
        'array-bracket-spacing': ['error', 'never'],
        'no-else-return': 'off',
        'no-multiple-empty-lines': ['error', { max: 1 }],
        'padding-line-between-statements': ['error',
            { blankLine: 'always', prev: '*', next: 'return' },
            { blankLine: 'always', prev: '*', next: ['block', 'block-like', 'function'] },
            { blankLine: 'always', prev: ['block', 'block-like', 'function', 'iife'], next: '*' }],
        'vue/no-potential-component-option-typo': ['error', {
            presets: ['vue'],
            custom: [],
            threshold: 1,
        }],
        'vue/no-required-prop-with-default': ['error', {
            autofix: false,
        }],
        'vue/padding-line-between-blocks': ['error', 'always'],
        'vue/padding-lines-in-component-definition': ['error', {
            betweenOptions: 'always',
            withinOption: {
                mixins: 'always',
                components: { betweenItems: 'never' },
            },
            groupSingleLineProperties: false,
        }],
        'max-len': [
            'error', 120, {
                ignoreComments: true,
                ignoreTrailingComments: true,
                ignoreUrls: true,
                ignoreTemplateLiterals: true,
            },
        ],
        'import-newlines/enforce': ['error', {
            'items': Infinity,
            'max-len': 120,
        }],
    },
    settings: {
        'import/resolver': {
            node: {
                extensions: ['.js', '.jsx', '.ts', '.tsx', '.vue'],
            },
            typescript: {
                project: './tsconfig.app.json',
            },
        },
        'vue/setup-compiler-macros': true,
    },
    globals: {
        $: true,
        document: true,
        navigator: true,
        window: true,
        process: true,
        axios: true,
        moment: true,
        BeePlugin: true,
        $dictionary: true,
        Insider: true,
        atatus: true,
        __BASE_URL__: true,
        FB: true,
    },
};
